nya::_input $name $value $size="m" $placeholder $id $reset $rows $class $disabled $noAPI
    &|(typeof theme === 'undefined' ? '"input.light.css"' : '"input.' + theme + '.css"')|
    &"input.js"

    CHOOSE
        WHEN $reset
            div.nya-input.nya-input_reset AS $node
                @class +(Nya.Input.getClass($size, $class))

                .nya-input__input.form-control[name=$name][id=$id]:if($rows, textarea:if(($rows !== true), [rows=$rows]), input[value=$value])[placeholder=$placeholder]:if($disabled, .disabled[disabled]) AS $inputNode
                    TEST $rows
                        $value
                span.close AS $resetNode
                    span
                        """&times;"""

        OTHERWISE
            .nya-input.nya-input__input.form-control[name=$name][id=$id]:if($rows, textarea:if(($rows !== true), [rows=$rows]), input[value=$value])[placeholder=$placeholder]:if($disabled, .disabled[disabled]) AS $inputNode
                @class +(Nya.Input.getClass($size, $class))

                TEST $rows
                    $value

    EXPOSE JS
        if ($resetNode) {
            $B($resetNode).on('click', function() {
                $inputNode.value = '';
                $B($inputNode).emit('focus');
            });
        }
        return $noAPI ? undefined : new Nya.Input($node, $inputNode);


nya::input $name $value $size $placeholder $id $reset $class $disabled $noAPI
    nya::_input $name $value $size $placeholder $id $reset (false) $class $disabled $noAPI AS $ret
    EXPOSE $ret
